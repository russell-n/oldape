BusyBox Wget Builder
====================

A builder of busybox wget sessions.

<<name='imports', echo=False>>=
from apetools.lexicographers.config_options import ConfigOptions
from apetools.tools.wgetsession import BusyboxWgetSession
from apetools.commons.errors import ConfigurationError

from basetoolbuilder import BaseToolBuilder, Parameters
from builderenums import BuilderParameterEnums
@

.. uml::

   ConfigurationError <|-- WgetSessionBuilderError

.. module:: apetools.builders.subbuilders.busyboxwgetbuilder
.. autosummary::
   :toctree: api

   WgetSessionBuilderError

<<name='WgetSessionBuilderError', echo=False>>=
class WgetSessionBuilderError(ConfigurationError):
    """
    An error to raise if the config file has an error
    """
# end class WgetSessionBuilderError
@

.. uml::

   BaseToolBuilder <|-- BusyboxWgetBuilder

.. autosummary::
   :toctree: api

   BusyboxWgetBuilder
   BusyboxWgetBuilder.data_file
   BusyboxWgetBuilder.url
   BusyboxWgetBuilder.connection
   BusyboxWgetBuilder.storage
   BusyboxWgetBuilder.repetitions
   BusyboxWgetBuilder.max_time
   BusyboxWgetBuilder.product
   BusyboxWgetBuilder.parameters


<<name='BusyboxWgetBuilder', echo=False>>=
class BusyboxWgetBuilder(BaseToolBuilder):
    """
    A class to build a wget session
    """
    def __init__(self, *args, **kwargs):
        """
        :param:

         - `master`: The Master Builder
         - `config_map`: a pre-loaded configuration map
        """
        super(BusyboxWgetBuilder, self).__init__(*args, **kwargs)
        self._url = None
        self._connection = None
        self._storage = None
        self._repetitions = None
        self._data_file = None
        self._max_time = None
        return

    @property
    def data_file(self):
        """
        :return: the filename given by the user
        """
        if self._data_file is None:
            self._data_file = self.config_map.get(ConfigOptions.busyboxwget_section,
                                                  ConfigOptions.data_file_option,
                                                  default=None,
                                                  optional=True)
        return self._data_file

    @property
    def url(self):
        """
        The URL of the http (or ftp) server and file
        
        :return: URL
        """
        if self._url is None:
            self._url = self.config_map.get(ConfigOptions.busyboxwget_section,
                                            ConfigOptions.url_option)
        return self._url

    @property
    def connection(self):
        """
        This is a hack that ignores the possibility of multiple nodes
        
        :return: connection to the device to run wget on
        """
        if self._connection is None:
            self._connection = self.master.nodes.values()[0].connection
        return self._connection

    @property
    def storage(self):
        """
        Storage to send output to
        """
        if self._storage is None:
            self._storage = self.master.storage
        return self._storage

    @property
    def repetitions(self):
        if self._repetitions is None:
            self._repetitions = self.config_map.get_int(ConfigOptions.busyboxwget_section,
                                                        ConfigOptions.repetitions_option,
                                                        default=None,
                                                        optional=True)
        return self._repetitions

    @property
    def max_time(self):
        if self._max_time is None:
            self._max_time = self.config_map.get_time(ConfigOptions.busyboxwget_section,
                                                      ConfigOptions.time_option,
                default=None,
                optional=True)
        return self._max_time   
    
    @property
    def product(self):
        """
        :return: A Busybox Wget Session
        """
        if self._product is None:
            self._product = BusyboxWgetSession(url=self.url,
                                               connection=self.connection,
                                               storage=self.master.storage,
                                               data_file=self.data_file,
                                               repetitions=self.repetitions,
                                               max_time=self.max_time)
        return self._product

    @property
    def parameters(self):
        """
        :return: list of namedtuples
        """
        if self._parameters is None:
            self._parameters = self.previous_parameters
        return self._parameters
# end class BusyboxWgetSessionBuilder
@
